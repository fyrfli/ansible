---
- name: Backup jupiter
  hosts: localhost
  gather_facts: true
  vars:
    archive_tag: "{{ansible_date_time.date.replace('-','')}}"
    backup_dir: "/u/backups/{{archive_tag}}_test"
# Leaving this variable in here just in case I need it later and for reference of how to build a list
    backup_targets: 
      - /home/camille
      - /etc
      - /home/docker
      - /u/dockerFiles/volumes
  tasks:
    - name: Create backup directory
      file:
        path: "{{backup_dir}}"
        state: directory
    - name: Archive files
      archive:
        path: /home/camille
        exclusion_patterns:
          - '**/*tar.gz'
          - '**/*tgz'
          - '**/*deb'
          - '**/*zip'
        dest: "{{backup_dir}}/camille-{{archive_tag}}.tgz"
      tags:
        - camille
    - name: Archive /home/docker files
      become: true
      become_user: root
      archive:
        path: /home/docker
        dest: "{{backup_dir}}/docker-{{archive_tag}}.tgz"
      tags:
        - docker-home
    - name: Archive /etc files
      become: true
      archive:
        path: /etc
        dest: "{{backup_dir}}/etc-{{archive_tag}}.tgz"
      tags:
        - etc
    - name: Archive /dockerFiles files
      become: true
      archive:
        path: /u/dockerFiles/volumes
        dest: "{{backup_dir}}/volumes-{{archive_tag}}.tgz"
      tags:
        - docker-files
    - name: Change owner of directory and files
      become: true
      changed_when: true
      file:
        path: "{{backup_dir}}"
        owner: "{{ ansible_user_id }}"
        recurse: yes
      tags:
        - chown
    - name: Dump mySQL databases
      mysql_db:
        state: dump
        name: all
        target: "{{backup_dir}}/{{ansible_date_time.date.replace('-','')}}/mysqldbs-{{ansible_date_time.date.replace('-','')}}.sql"
      tags:
        - mysql-dump
    - name: Touch the target archive file
      file:
        path: "{{backup_dir}}/joplin-{{archive_tag}}.sql"
        state: touch
    - name: Dump a database in a docker container
      community.docker.docker_container_exec:
        container: joplin-db
        argv:
          - pg_dump
          - --dbname=joplin
          - --username=joplin
          - --file=/tmp/joplin-{{archive_tag}}.sql
    - name: Copy dump to host
      shell: docker cp joplin-db:/tmp/joplin-{{archive_tag}}.sql {{backup_dir}}
    - name: Copy to DO
      with_fileglob: "{{backup_dir}}/*"
      amazon.aws.aws_s3:
        aws_access_key: "{{ lookup('env','DO_ACCESS_KEY') }}"
        aws_secret_key: "{{ lookup('env','DO_SECRET_KEY') }}"
        s3_url: "https://sfo3.digitaloceanspaces.com"
        region: sfo3
        bucket: "camille-space"
        object: "/jupiter/{{archive_tag}}/{{item | basename}}"
        src: "{{item}}"
        mode: put
        overwrite: no
      tags:
        - copy-to-do
  handlers:
    - name: Notify me
      community.general.pushover:
        app_token: "{{ lookup('env','PUSHOVER_APP_ID') }}"
        user_key: "{{ lookup('env','PUSHOVER_USER_ID') }}"
        msg: "Backup via ansible complete"
        pri: 0
      delegate_to: localhost
