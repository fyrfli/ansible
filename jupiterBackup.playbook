---
- name: Backup jupiter
  hosts: localhost
  gather_facts: true
  vars:
    archive_tag: "{{ansible_date_time.date.replace('-','')}}"
    backup_dir: "/u/backups/{{archive_tag}}"
    backup_targets: 
      - /home/camille
      - /etc
      - /home/docker
      - /u/dockerFiles/volumes
  vars_files:
    vault
  tasks:
    - name: Create backup directory
      file:
        path: "{{backup_dir}}"
        state: directory
    - name: Archive files
      become: true
      archive:
        path: "{{item}}"
        exclusion_patterns:
          - '**/*tar.gz'
          - '**/*tgz'
          - '**/*deb'
          - '**/*zip'
          - '**/[0-9]*'
        dest: "{{backup_dir}}/{{item.rsplit('/')[-1]}}-{{archive_tag}}.tgz"
      tags:
        - file-archives
      loop:  "{{backup_targets}}"
      register: archive_output
    - name: Touch the target archive file for joplin db dump
      file:
        path: "{{backup_dir}}/joplin-{{archive_tag}}.sql"
        state: touch
      tags:
        -psql-dump-prep
    - name: Dump a database in a docker container
      community.docker.docker_container_exec:
        container: joplin-db
        argv:
          - pg_dump
          - --dbname=joplin
          - --username=joplin
          - --file=/tmp/joplin-{{archive_tag}}.sql
      tags:
        - psql-dump
      register: dump_output
    - name: Copy dump to host
      shell: docker cp joplin-db:/tmp/joplin-{{archive_tag}}.sql {{backup_dir}}
      tags:
        - docker-to-host
      register: dockertohost_output
    - name: Change ownership of archive directory
      file:
        path: "{{backup_dir}}"
        owner: "{{ansible_user}}"
        recurse: true
      tags:
        - chown
    - name: Copy to DO
      with_fileglob: "{{backup_dir}}/*"
      amazon.aws.aws_s3:
        aws_access_key: "{{ vault_do_access_key }}"
        aws_secret_key: "{{ vault_do_secret_key }}"
        s3_url: "https://sfo3.digitaloceanspaces.com"
        region: sfo3
        bucket: "camille-space"
        object: "/jupiter/{{archive_tag}}/{{item | basename}}"
        src: "{{item}}"
        mode: put
        overwrite: no
      tags:
        - copy-to-do
      register: s3copy_output
  handlers:
    - name: Pushover notifiy
      community.general.pushover:
        app_token: "{{ vault_pushover_app_id }}"
        user_key: "{{ vault_pushover_user_id }}"
        msg: "Backup via ansible complete"
        pri: 0
    - name: Telegram notify
      community.general.telegram:
        token: "{{ vault_telegram_bot_id }}"
        api_args:
          chat_id: "{{ vault_telegram_bot_chat }}"
          parse_mode: "markdown"
          text: "{{ archive_output }} \n {{dump_output}} \n {{dockertohost_output}} \n {{s3copy_output}}"
          disable_web_page_preview: true
          disable_notification: false
