---
- name: Backup jupiter
  hosts: jupiter
  vars_files:
    - .vault
  vars:
    archive_tag: "{{ ansible_date_time.date.replace('-','') }}"
    backup_dir: "{{ jupiter_backup_dest }}/{{ archive_tag }}"
    psql_db: "semaphore"

  tasks:
    - name: Create backup directory
      ansible.builtin.file:
        path: "{{ backup_dir }}"
        state: directory
      tags:
        - make_dir

    - name: Archive files
      become: true
      community.general.archive:
        path: "{{ item }}"
        exclusion_patterns:
          - '**/*tar.gz'
          - '**/*tgz'
          - '**/*deb'
          - '**/*zip'
          - '**/*vagrant*'
          - '**/*VirtualBox*'
          - '**/*iso'
        dest: "{{ backup_dir }}/{{ item.rsplit('/')[-1] }}-{{ archive_tag }}.tgz"
      tags:
        - archiving
      loop:  "{{ jupiter_backup_targets }}"
      register: archive_output
      notify:
        - Push over

    - name: Touch the target archive file for joplin db dump
      ansible.builtin.file:
        path: "{{ backup_dir }}/joplin-{{ archive_tag }}.sql"
        state: touch
      tags:
        - psql_file

    - name: Dump a database in a docker container
      community.docker.docker_container_exec:
        container: joplin-db
        argv:
          - pg_dump
          - --dbname=joplin
          - --username=joplin
          - --file=/tmp/joplin-{{ archive_tag }}.sql
      tags:
        - psqlr_dump
      register: dump_output
      notify:
        - Push over

    - name: Copy dump to host
      ansible.builtin.shell: docker cp joplin-db:/tmp/joplin-{{ archive_tag }}.sql {{ backup_dir }}
      register: dockertohost_output
      tags:
        - docker_cp
      notify:
        - Push over

          #- include_tasks: psqlDump.yaml

    - name: Dump MySQL databases on host
      community.mysql.mysql_db:
        login_user: '{{ jupiter_mysql_user }}'
        login_password: '{{ jupiter_mysql_password }}'
        state: dump
        name: all
        target: '{{ backup_dir }}//mysql-{{ archive_tag }}.sql'
      tags:
        - mysql_dump

    - name: Change ownership of archive directory
      become: true
      ansible.builtin.file:
        path: "{{ backup_dir }}"
        owner: "{{ ansible_user }}"
        recurse: true
      tags:
        - chowning

    - name: Copy to DO
      with_fileglob: "{{ backup_dir }}/*"
      amazon.aws.aws_s3:
        aws_access_key: "{{ do_access_key }}"
        aws_secret_key: "{{ do_secret_key }}"
        s3_url: "{{ s3_url }}"
        region: "{{ s3_region }}"
        bucket: "{{ s3_bucket }}"
        object: "{{ jupiter_s3_dest }}/{{ archive_tag }}/{{ item | basename }}"
        src: "{{ item }}"
        mode: put
        overwrite: no
      tags:
        - s3copy
      register: s3copy_output
      notify:
        - Push over

  handlers:
    - name: Push over
      community.general.pushover:
        app_token: "{{ pushover_app_id }}"
        user_key: "{{ pushover_user_id }}"
        msg: "Backup completed for jupiter {{ ansible_date_time.date }}"
        pri: 0
      delegate_to: localhost
